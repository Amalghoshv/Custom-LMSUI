{"version":3,"file":"Courses-QARcs0C6.js","sources":["../../../../frontend/src/pages/Courses.vue"],"sourcesContent":["<template>\n    <div v-if=\"courses.data\">\n        <header\n            class=\"sticky top-0 z-10 flex items-center justify-between border-b bg-surface-white px-3 py-2.5 sm:px-5\"\n        >\n            <Breadcrumbs\n                class=\"h-7\"\n                :items=\"[{ label: __('Courses'), route: { name: 'Courses' } }]\"\n            />\n            <div class=\"flex space-x-2 justify-end\">\n                <div class=\"w-40 md:w-44\">\n                    <!-- <FormControl\n                        v-if=\"categories.data?.length\"\n                        type=\"select\"\n                        :value=\"courseStore.currentCategory\"\n                        @update:value=\"updateCategory\"\n                        :options=\"categories.data\"\n                        :placeholder=\"__('Category')\"\n                    /> -->\n                </div>\n                <!-- <div class=\"w-28 md:w-36\">\n                    <FormControl\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        v-model=\"searchQuery\"\n                        @input=\"courses.reload()\"\n                    >\n                        <template #prefix>\n                            <Search\n                                class=\"w-4 h-4 stroke-1.5 text-ink-gray-5\"\n                                name=\"search\"\n                            />\n                        </template>\n                    </FormControl>\n                </div> -->\n                <router-link\n                    v-if=\"user.data?.is_moderator || user.data?.is_instructor\"\n                    :to=\"{\n                        name: 'CourseForm',\n                        params: {\n                            courseName: 'new',\n                        },\n                    }\"\n                >\n                    <Button variant=\"solid\">\n                        <template #prefix>\n                            <Plus class=\"h-4 w-4\" />\n                        </template>\n                        {{ __('New') }}\n                    </Button>\n                </router-link>\n            </div>\n        </header>\n        <div class=\"\">\n            <Tabs\n                v-if=\"hasCourses\"\n                as=\"div\"\n                v-model=\"tabIndex\"\n                tablistClass=\"overflow-x-visible flex-wrap !gap-3 md:flex-nowrap\"\n                :tabs=\"makeTabs\"\n            >\n                <template #tab=\"{ tab, selected }\">\n                    <div>\n                        <button\n                            class=\"group -mb-px flex items-center gap-2 overflow-hidden border-b border-transparent py-2.5 text-base text-ink-gray-5 duration-300 ease-in-out hover:border-outline-gray-3 hover:text-ink-gray-9\"\n                            :class=\"{ 'text-ink-gray-9': selected }\"\n                        >\n                            <component v-if=\"tab.icon\" :is=\"tab.icon\" class=\"h-5\" />\n                            {{ __(tab.label) }}\n                            <Badge theme=\"gray\">\n                                {{ tab.count }}\n                            </Badge>\n                        </button>\n                    </div>\n                </template>\n                <template #tab-panel=\"{ tab }\">\n                    <div\n                        v-if=\"tab.courses && tab.courses.value.length\"\n                        class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 3xl:grid-cols-5 gap-7 my-5 mx-5\"\n                    >\n                        <router-link\n                            v-for=\"course in tab.courses.value\"\n                            :to=\"\n                                course.membership && course.current_lesson\n                                    ? {\n                                            name: 'Lesson',\n                                            params: {\n                                                courseName: course.name,\n                                                chapterNumber: course.current_lesson.split('-')[0],\n                                                lessonNumber: course.current_lesson.split('-')[1],\n                                            },\n                                      }\n                                    : course.membership\n                                    ? {\n                                            name: 'Lesson',\n                                            params: {\n                                                courseName: course.name,\n                                                chapterNumber: 1,\n                                                lessonNumber: 1,\n                                            },\n                                      }\n                                    : {\n                                            name: 'CourseDetail',\n                                            params: { courseName: course.name },\n                                      }\n                            \"\n                        >\n                            <CourseCard :course=\"course\" />\n                        </router-link>\n                    </div>\n                    <div v-else class=\"p-5 italic text-ink-gray-4\">\n                        {{ __('No {0} courses').format(tab.label.toLowerCase()) }}\n                    </div>\n                </template>\n            </Tabs>\n            <div\n                v-else-if=\"\n                    !courses.loading &&\n                    (user.data?.is_moderator || user.data?.is_instructor)\n                \"\n                class=\"grid grid-cols-3 p-5\"\n            >\n                <router-link\n                    :to=\"{\n                        name: 'CourseForm',\n                        params: {\n                            courseName: 'new',\n                        },\n                    }\"\n                >\n                    <div class=\"bg-surface-menu-bar py-32 px-5 rounded-md\">\n                        <div class=\"flex flex-col items-center text-center space-y-2\">\n                            <Plus\n                                class=\"size-10 stroke-1 text-ink-gray-8 p-1 rounded-full border bg-surface-white\"\n                            />\n                            <div class=\"font-medium\">\n                                {{ __('Create a Course') }}\n                            </div>\n                            <span class=\"text-ink-gray-7 text-sm leading-4\">\n                                {{ __('You can add chapters and lessons to it.') }}\n                            </span>\n                        </div>\n                    </div>\n                </router-link>\n            </div>\n            <div\n                v-else-if=\"!courses.loading && !hasCourses\"\n                class=\"text-center p-5 text-ink-gray-5 mt-52 w-3/4 md:w-1/2 mx-auto space-y-2\"\n            >\n                <BookOpen class=\"size-10 mx-auto stroke-1 text-ink-gray-4\" />\n                <div class=\"text-xl font-medium\">\n                    {{ __('No courses found') }}\n                </div>\n                <div class=\"leading-5\">\n                    {{\n                        __(\n                            'There are no courses available at the moment. Keep an eye out, fresh learning experiences are on the way soon!'\n                        )\n                    }}\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport {\n    Badge,\n    Breadcrumbs,\n    Button,\n    call,\n    createResource,\n    FormControl,\n    Tabs,\n} from 'frappe-ui';\nimport CourseCard from '@/components/CourseCard.vue';\nimport { BookOpen, Plus, Search } from 'lucide-vue-next';\nimport { ref, computed, inject, onMounted, watch } from 'vue';\nimport { updateDocumentTitle } from '@/utils';\nimport { useRouter } from 'vue-router';\nimport { useSettings } from '@/stores/settings';\nimport { useCourseStore } from '@/stores/courseStore';\nconst searchQuery = inject('searchQuery');\nconst courseStore = useCourseStore();\nconst user = inject('$user');\n// const searchQuery = ref('');\nconst hasCourses = ref(false);\nconst router = useRouter();\nconst settings = useSettings();\n\nonMounted(() => {\n    checkLearningPath();\n    let queries = new URLSearchParams(location.search);\n    if (queries.has('category')) {\n        courseStore.setCategory(queries.get('category'));\n    }\n});\n\nconst checkLearningPath = () => {\n    if (\n        settings.learningPaths.data &&\n        (!user.data?.is_moderator || !user.data?.is_instructor)\n    ) {\n        router.push({ name: 'Programs' });\n    }\n};\n\n\nconst courses = createResource({\n    url: 'lms.lms.utils.get_courses',\n    cache: ['courses', user.data?.email, courseStore.currentCategory],\n    auto: true,\n    makeParams() {\n        console.log('API Params:', { category: courseStore.currentCategory });\n        return {\n            category: courseStore.currentCategory || null,\n        };\n    },\n});\n\n\nconst tabIndex = ref(0);\nlet tabs;\n\nconst makeTabs = computed(() => {\n    tabs = [];\n    addToTabs('Live');\n    addToTabs('New');\n    addToTabs('Upcoming');\n    if (user.data) {\n        addToTabs('Enrolled');\n        if (\n            user.data.is_moderator ||\n            user.data.is_instructor ||\n            courses.data?.created?.length\n        ) {\n            addToTabs('Created');\n        }\n        if (user.data.is_moderator) {\n            addToTabs('Under Review');\n        }\n    }\n    return tabs;\n});\n\nconst addToTabs = (label) => {\n    let coursesList = getCourses(label.toLowerCase().split(' ').join('_'));\n    tabs.push({\n        label,\n        courses: computed(() => coursesList),\n        count: computed(() => coursesList.length),\n    });\n};\n\nconst getCourses = (type) => {\n    let courseList = courses.data[type] || [];\n    if (searchQuery.value) {\n        let query = searchQuery.value.toLowerCase();\n        courseList = courseList.filter(\n            (course) =>\n                course.title.toLowerCase().includes(query) ||\n                course.short_introduction.toLowerCase().includes(query) ||\n                course.tags.filter((tag) => tag.toLowerCase().includes(query)).length\n        );\n    }\n    if (courseStore.currentCategory) {\n        courseList = courseList.filter(\n            (course) => course.category === courseStore.currentCategory\n        );\n    }\n    return courseList;\n};\n\n// Categories resource\nconst categories = createResource({\n    url: 'lms.lms.api.get_categories',\n    makeParams() {\n        return {\n            doctype: 'LMS Course',\n            filters: {\n                published: 1,\n            },\n        };\n    },\n    cache: ['courseCategories'],\n    auto: true,\n    transform(data) {\n        data.unshift({\n            label: '',\n            value: null,\n        });\n    },\n});\n\nwatch(courses, () => {\n    if (courses.data) {\n        Object.keys(courses.data).forEach((section) => {\n            if (courses.data[section].length) {\n                hasCourses.value = true;\n            }\n        });\n    }\n});\n\n// Watch for changes in the store's currentCategory\nwatch(\n    () => courseStore.currentCategory,\n    (newCategory) => {\n        let queries = new URLSearchParams(location.search);\n        if (newCategory) {\n            queries.set('category', newCategory);\n        } else {\n            queries.delete('category');\n        }\n        history.pushState(null, '', `${location.pathname}?${queries.toString()}`);\n        courses.reload();\n    }\n);\nwatch(\n    () => searchQuery.value,\n    (newQuery) => {\n        console.log('Search query changed:', newQuery);\n        courses.reload();\n    }\n);\n\n// Helper method to update the category\nconst updateCategory = (newCategory) => {\n    courseStore.setCategory(newCategory);\n};\n\nconst pageMeta = computed(() => {\n    return {\n        title: 'Courses',\n        description: 'All Courses divided by categories',\n    };\n});\n\nupdateDocumentTitle(pageMeta);\n</script>"],"names":["searchQuery","inject","courseStore","useCourseStore","user","hasCourses","ref","router","useRouter","settings","useSettings","onMounted","checkLearningPath","queries","_a","_b","courses","createResource","tabIndex","tabs","makeTabs","computed","addToTabs","label","coursesList","getCourses","type","courseList","query","course","tag","data","watch","section","newCategory","newQuery","pageMeta","updateDocumentTitle"],"mappings":"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"}