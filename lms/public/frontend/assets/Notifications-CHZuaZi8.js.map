{"version":3,"file":"Notifications-CHZuaZi8.js","sources":["../../../../frontend/src/pages/Notifications.vue"],"sourcesContent":["<template>\n\t<header\n\t\tclass=\"sticky top-0 z-10 flex flex-col md:flex-row md:items-center justify-between border-b bg-surface-white px-3 py-2.5 sm:px-5\"\n\t>\n\t\t<Breadcrumbs :items=\"breadcrumbs\" />\n\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t<Button\n\t\t\t\t@click=\"markAllAsRead.submit\"\n\t\t\t\t:loading=\"markAllAsRead.loading\"\n\t\t\t\tv-if=\"activeTab === 'Unread' && unReadNotifications.data?.length > 0\"\n\t\t\t>\n\t\t\t\t{{ __('Mark all as read') }}\n\t\t\t</Button>\n\t\t\t<TabButtons\n\t\t\t\tclass=\"inline-block\"\n\t\t\t\t:buttons=\"[{ label: 'Unread', active: true }, { label: 'Read' }]\"\n\t\t\t\tv-model=\"activeTab\"\n\t\t\t/>\n\t\t</div>\n\t</header>\n\t<div class=\"w-3/4 mx-auto px-5 pt-6 divide-y\">\n\t\t<div\n\t\t\tv-if=\"notifications?.length\"\n\t\t\tv-for=\"log in notifications\"\n\t\t\tclass=\"flex items-center py-2 justify-between\"\n\t\t>\n\t\t\t<div class=\"flex items-center\">\n\t\t\t\t<Avatar :image=\"log.user_image\" :label=\"log.full_name\" class=\"mr-2\" />\n\t\t\t\t<div class=\"notification text-ink-gray-7\" v-html=\"log.subject\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t<Link\n\t\t\t\t\tv-if=\"log.link\"\n\t\t\t\t\t:to=\"log.link\"\n\t\t\t\t\t@click=\"markAsRead.submit({ name: log.name })\"\n\t\t\t\t\tclass=\"text-ink-gray-5 font-medium text-sm hover:text-ink-gray-7\"\n\t\t\t\t>\n\t\t\t\t\t{{ __('View') }}\n\t\t\t\t</Link>\n\t\t\t\t<Tooltip :text=\"__('Mark as read')\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tv-if=\"!log.read\"\n\t\t\t\t\t\t@click=\"markAsRead.submit({ name: log.name })\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t<X class=\"h-4 w-4 text-ink-gray-7 stroke-1.5\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-else class=\"text-ink-gray-5\">\n\t\t\t{{ __('Nothing to see here.') }}\n\t\t</div>\n\t</div>\n</template>\n<script setup>\nimport {\n\tAvatar,\n\tcreateListResource,\n\tcreateResource,\n\tBreadcrumbs,\n\tLink,\n\tTabButtons,\n\tButton,\n\tTooltip,\n} from 'frappe-ui'\nimport { computed, inject, ref, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { X } from 'lucide-vue-next'\nimport { updateDocumentTitle } from '@/utils'\n\nconst user = inject('$user')\nconst socket = inject('$socket')\nconst activeTab = ref('Unread')\nconst router = useRouter()\n\nonMounted(() => {\n\tif (!user.data) router.push({ name: 'Courses' })\n\n\tsocket.on('publish_lms_notifications', (data) => {\n\t\tunReadNotifications.reload()\n\t})\n})\n\nconst notifications = computed(() => {\n\treturn activeTab.value === 'Unread'\n\t\t? unReadNotifications.data\n\t\t: readNotifications.data\n})\n\nconst unReadNotifications = createListResource({\n\tdoctype: 'Notification Log',\n\turl: 'lms.lms.api.get_notifications',\n\tfilters: {\n\t\tfor_user: user.data?.name,\n\t\tread: 0,\n\t},\n\tauto: true,\n\tcache: 'Unread Notifications',\n})\n\nconst readNotifications = createListResource({\n\tdoctype: 'Notification Log',\n\turl: 'lms.lms.api.get_notifications',\n\tfilters: {\n\t\tfor_user: user.data?.name,\n\t\tread: 1,\n\t},\n\tauto: true,\n\tcache: 'Read Notifications',\n})\n\nconst markAsRead = createResource({\n\turl: 'lms.lms.api.mark_as_read',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tname: values.name,\n\t\t}\n\t},\n\tonSuccess(data) {\n\t\tunReadNotifications.reload()\n\t\treadNotifications.reload()\n\t},\n})\n\nconst markAllAsRead = createResource({\n\turl: 'lms.lms.api.mark_all_as_read',\n\tonSuccess(data) {\n\t\tunReadNotifications.reload()\n\t\treadNotifications.reload()\n\t},\n})\n\nconst breadcrumbs = computed(() => {\n\tlet crumbs = [\n\t\t{\n\t\t\tlabel: 'Notifications',\n\t\t\troute: {\n\t\t\t\tname: 'Notifications',\n\t\t\t},\n\t\t},\n\t]\n\treturn crumbs\n})\n\nconst pageMeta = computed(() => {\n\treturn {\n\t\ttitle: 'Notifications',\n\t\tdescription: 'All your notifications in one place.',\n\t}\n})\n\nupdateDocumentTitle(pageMeta)\n</script>\n<style>\n.notification strong {\n\tfont-weight: 400;\n}\n.notification b {\n\tfont-weight: 400;\n}\n</style>\n"],"names":["user","inject","socket","activeTab","ref","router","useRouter","onMounted","data","unReadNotifications","notifications","computed","readNotifications","createListResource","_a","_b","markAsRead","createResource","values","markAllAsRead","breadcrumbs","pageMeta","updateDocumentTitle"],"mappings":"msBAyEA,MAAMA,EAAOC,EAAO,OAAO,EACrBC,EAASD,EAAO,SAAS,EACzBE,EAAYC,EAAI,QAAQ,EACxBC,EAASC,EAAS,EAExBC,EAAU,IAAM,CACVP,EAAK,MAAMK,EAAO,KAAK,CAAE,KAAM,SAAW,CAAA,EAE/CH,EAAO,GAAG,4BAA8BM,GAAS,CAChDC,EAAoB,OAAM,CAC1B,CAAA,CACF,CAAC,EAED,MAAMC,EAAgBC,EAAS,IACvBR,EAAU,QAAU,SACxBM,EAAoB,KACpBG,EAAkB,IACrB,EAEKH,EAAsBI,EAAmB,CAC9C,QAAS,mBACT,IAAK,gCACL,QAAS,CACR,UAAUC,EAAAd,EAAK,OAAL,YAAAc,EAAW,KACrB,KAAM,CACN,EACD,KAAM,GACN,MAAO,sBACR,CAAC,EAEKF,EAAoBC,EAAmB,CAC5C,QAAS,mBACT,IAAK,gCACL,QAAS,CACR,UAAUE,EAAAf,EAAK,OAAL,YAAAe,EAAW,KACrB,KAAM,CACN,EACD,KAAM,GACN,MAAO,oBACR,CAAC,EAEKC,EAAaC,EAAe,CACjC,IAAK,2BACL,WAAWC,EAAQ,CAClB,MAAO,CACN,KAAMA,EAAO,IAChB,CACE,EACD,UAAUV,EAAM,CACfC,EAAoB,OAAM,EAC1BG,EAAkB,OAAM,CACxB,CACF,CAAC,EAEKO,EAAgBF,EAAe,CACpC,IAAK,+BACL,UAAUT,EAAM,CACfC,EAAoB,OAAM,EAC1BG,EAAkB,OAAM,CACxB,CACF,CAAC,EAEKQ,EAAcT,EAAS,IACf,CACZ,CACC,MAAO,gBACP,MAAO,CACN,KAAM,eACN,CACD,CACH,CAEC,EAEKU,EAAWV,EAAS,KAClB,CACN,MAAO,gBACP,YAAa,sCACf,EACC,EAED,OAAAW,EAAoBD,CAAQ"}